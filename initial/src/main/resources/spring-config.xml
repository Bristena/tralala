<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">


       <context:component-scan base-package="com" />

    <beans:bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location">
            <beans:value>properties/database.properties</beans:value>
        </beans:property>
    </beans:bean>

    <!--<beans:bean id="dataSource"-->
          <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<beans:property name="driverClassName" value="${jdbc.driverClassName}" />-->
        <!--<beans:property name="url" value="${jdbc.url}" />-->
        <!--<beans:property name="username" value="${jdbc.username}" />-->
        <!--<beans:property name="password" value="${jdbc.password}" />-->
    <!--</beans:bean>-->

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

       <!-- Enables the Spring MVC @Controller programming model -->
       <annotation-driven />
    <context:annotation-config />

       <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
       <!--<resources mapping="/resources/**" location="/resources/templates/" />-->
       <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
       <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
              <beans:property name="prefix" value="/webapp" />
              <beans:property name="suffix" value=".html" />
       </beans:bean>

       <!-- Configure to plugin JSON as request and response in method handler -->
       <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
              <beans:property name="messageConverters">
                     <beans:list>
                            <beans:ref bean="jsonMessageConverter"/>
                     </beans:list>
              </beans:property>
       </beans:bean>

       <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
       </beans:bean>



    <!--&lt;!&ndash;&lt;!&ndash; Hibernate session factory &ndash;&gt;&ndash;&gt;-->
    <!--<beans:bean id="sessionFactory"-->
          <!--class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->

        <!--<beans:property name="dataSource" ref="dataSource"/>-->

        <!--<beans:property name="hibernateProperties">-->
            <!--<beans:props>-->
                <!--<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>-->
                <!--<beans:prop key="hibernate.show_sql">true</beans:prop>-->
            <!--</beans:props>-->
        <!--</beans:property>-->

        <!--<beans:property name="mappingResources">-->
            <!--<beans:list>-->
                <!--<beans:value>/hibernate/animalsMapping.hbm.xml</beans:value>-->
            <!--</beans:list>-->
        <!--</beans:property>-->


    <!--</beans:bean>-->
    <!--<beans:bean id="animalDao" class="com.dao.AnimalDaoHibernateImpl" >-->
        <!--<beans:property name="sessionFactory" ref="sessionFactory">-->
        <!--</beans:property>-->
    <!--</beans:bean>-->


    <!--<beans:bean id="stapanDao" class="com.dao.StapanDaoHibernateImpl" >-->
        <!--<beans:property name="sessionFactory" ref="sessionFactory">-->
        <!--</beans:property>-->
    <!--</beans:bean>-->


        <beans:bean id="ds"
             class="org.springframework.jdbc.datasource.DriverManagerDataSource">

              <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
              <beans:property name="url" value="jdbc:mysql://localhost/animals" />
              <beans:property name="username" value="root" />
              <beans:property name="password" value="Am3mere!" />
       </beans:bean>

    <beans:bean id="animalDao" class = "com.dao.AnimalDaoImpl">
    <beans:property name="ds" ref="ds" >
    </beans:property>
    </beans:bean>
    <beans:bean id="stapanDao" class = "com.dao.StapanDaoImpl">
        <beans:property name="ds" ref="ds" >
        </beans:property>
    </beans:bean>


    <beans:bean id="stapanService" class="com.service.StapanServiceImpl">
        <beans:property name="stapanDao" ref="stapanDao">
        </beans:property>
    </beans:bean>

    <beans:bean id="animalService" class="com.service.AnimalServiceImpl">
        <beans:property name="animalDao" ref="animalDao">
        </beans:property>
        <beans:property name="stapanService" ref="stapanService">
        </beans:property>
    </beans:bean>

    <beans:bean id="animalController" class="com.controller.AnimalController">
        <beans:property name="animalService" ref="animalService">
        </beans:property>
        <beans:property name="stapanService" ref="stapanService">
        </beans:property>
    </beans:bean>

</beans:beans>
